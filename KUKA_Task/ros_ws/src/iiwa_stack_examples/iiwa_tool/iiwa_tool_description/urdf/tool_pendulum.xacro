<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <!-- Include Utilities -->
  <xacro:include filename="$(find iiwa_description)/urdf/utilities.xacro" />
  
  <!-- Tool properties -->
  <xacro:property name="tool_mass" value="0.025" /> <!-- Mass of string -->
  <xacro:property name="tool_length" value="0.24" /> <!-- Length of string -->
  <xacro:property name="num_links" value="10" />
  <xacro:property name="link_mass" value="${(tool_mass/num_links)}" />
  <xacro:property name="link_length" value="${tool_length/num_links}" />
  <xacro:property name="link_offset" value="0 0 ${link_length}" />
  <xacro:property name="link_radius" value="0.0015" />
  <xacro:property name="joint_damping" value="0.0001" />
  <xacro:property name="joint_friction" value="0.01" />

  <xacro:property name="ball_mass" value="0.02" />
  <xacro:property name="ball_radius" value="${link_radius*10}" />
  
  <xacro:macro name="tool_pendulum" params="parent *origin">

    <!--  Here we define a dummy fixed joint and link between the tip of the iiwa7 and the base of the tool. 
    If there is no offset between the two, that means the tool is attached at the robot flange. -->    

    <joint name="${parent}_tool_joint" type="fixed">
      <xacro:insert_block name="origin"/>
      <parent link="${parent}"/>
      <child link="tool_link_dummy"/>
    </joint>
  
    <link name="tool_link_dummy">
      <inertial>
        <origin xyz="0 0 ${0.0001/2}" rpy="0 0 0"/>
        <mass value="0.00001"/>
        <xacro:cylinder_inertia radius="0.0001" length="0.0001" mass="0.00001"/>
      </inertial>
      <visual>
        <origin xyz="0 0 ${0.0001/2}" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.0001" radius="0.0001"/>
        </geometry>
        <material name="Red"/>
      </visual>
      <collision>
        <origin xyz="0 0 ${0.0001/2}" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.0001" radius="0.0001"/>
        </geometry>
        <material name="Red"/>
      </collision>
    </link>

    <!-- Here we define the geometry of the tool. We designed the tool ourselves, so we can have a mesh file that represents it (see commented lines).
    Else, one can define it using a geometric representation that approximate it, like a cylinder. -->
    
    <joint name="tool_joint_${num_links}" type="revolute">
      <parent link="tool_link_dummy" />
      <child link = "tool_link_${num_links}" />
      <origin xyz="0 0 0" rpy="0 ${PI/3} 0" />      
      <axis xyz="0 1 0"/> <!-- Only rotate in the y axis i.e. in the x-z plane -->
      <limit lower="${-90 * PI / 180}" upper="${90 * PI / 180}"
             effort="0" velocity="0" />
      <dynamics damping="0.001"/>
      <dynamics friction="${joint_friction}"/>
    </joint>

    <link name="tool_link_${num_links}">
      <inertial>
        <origin xyz="0 0 ${(link_length/2)}" rpy="0 0 0"/>
        <mass value="${link_mass}"/>
        <xacro:cylinder_inertia radius="${link_radius}" length="${link_length}" mass="${link_mass}"/>
      </inertial>
      <visual>
        <origin xyz="0 0 ${link_length/2}" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${link_length}" radius="${link_radius}"/>
        </geometry>
        <material name="Red"/>
      </visual>
      <collision>
        <origin xyz="0 0 ${link_length/2}" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${link_length}" radius="${link_radius}"/>
        </geometry>
        <material name="Red"/>
      </collision>
    </link>


    <!-- Loop for the other links -->
    <xacro:macro name="loop" params="links_qty">
      <!-- Loop Condition -->
      <xacro:if value="${links_qty}">
        <!-- Add a joint and link (or do other things) -->
        
        <joint name="tool_joint_${links_qty}" type="continuous">
          <parent link="tool_link_${links_qty+1}" />
          <child link = "tool_link_${links_qty}" />
          <origin xyz="${link_offset}" rpy="0 0 0" />
          <!-- Only rotate in the y axis i.e. in the x-z plane -->
          <axis xyz="0 1 0"/>
          <dynamics damping="${joint_damping}"/>
          <dynamics friction="${joint_friction}"/>
        </joint>

        <link name="tool_link_${links_qty}">
          <inertial>
            <origin xyz="0 0 ${link_length/2}" rpy="0 0 0"/>
            <mass value="${link_mass}"/>
            <xacro:cylinder_inertia radius="${link_radius}" length="${link_length}" mass="${link_mass}"/>
          </inertial>
          <visual>
            <origin xyz="0 0 ${link_length/2}" rpy="0 0 0"/>
            <geometry>
              <cylinder length="${link_length}" radius="${link_radius}"/>
            </geometry>
            <material name="Red"/>
          </visual>
          <collision>
            <origin xyz="0 0 ${link_length/2}" rpy="0 0 0"/>
            <geometry>
              <cylinder length="${link_length}" radius="${link_radius}"/>
            </geometry>
            <material name="Red"/>
          </collision>
        </link>

        <!-- Loop -->
        <xacro:loop links_qty="${links_qty-1}" />
      </xacro:if>
    </xacro:macro>

    <xacro:loop links_qty="${num_links-1}" />

    <!-- Attach ball at the end -->
    <joint name="tool_joint_0" type="continuous">
      <parent link="tool_link_1" />
      <child link = "tool_link_0" />
      <origin xyz="${link_offset}" rpy="0 0 0" />
      <!-- Only rotate in the y axis i.e. in the x-z plane -->
      <axis xyz="0 1 0"/>
      <dynamics damping="${joint_damping}"/>
      <dynamics friction="${joint_friction}"/>
    </joint>

    <link name="tool_link_0">
      <inertial>
        <origin xyz="0 0 ${ball_radius}" rpy="0 0 0"/>
        <mass value="${ball_mass}"/>
        <xacro:sphere_inertia radius="${ball_radius}" mass="${ball_mass}"/>
      </inertial>
      <visual>
        <origin xyz="0 0 ${ball_radius}" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${ball_radius}"/>
        </geometry>
        <material name="Orange"/>
      </visual>
      <collision>
        <origin xyz="0 0 ${link_length/2}" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${ball_radius}"/>
        </geometry>
        <material name="Orange"/>
      </collision>
    </link>

    <!--  Here we define another dummy joint. It is placed at the end of the tool, so we can then attach a frame at its TCP for control -->
    <joint name="tool_tip_joint" type="fixed">
      <parent link="tool_link_0" />
      <child link = "tool_link_ee" />
      <origin xyz="${link_offset}" rpy="0 0 0" />
    </joint>
    
    <!--  The TCP frame is here defined -->
    <link name="tool_link_ee"/>
    
  </xacro:macro>
  
</robot>
